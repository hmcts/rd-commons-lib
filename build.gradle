plugins {
    id 'application'
    id 'project-report'
    id 'checkstyle'
    id 'jacoco'
    id 'idea'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.springframework.boot' version '3.3.6'
    id 'maven-publish'
    id 'uk.gov.hmcts.java' version '0.12.63'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.8'
}

def versions = [
        junit              : '5.11.3',
        junitPlatform      : '1.11.3',
        launchDarklySdk    : '5.2.2',
        log4j              : '2.24.2',
        logback            : '1.5.12',
        lombok             : '1.18.36',
        serenity           : '4.2.9'
]

def jarName = 'rd-commons-lib.jar'
def gitRepo = "https://github.com/hmcts/rd-commons-lib"

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/rd-commons-lib"
    }
}

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

group = 'com.github.hmcts'
version = buildNumber

application {
    // this is required to force Java running on the Azure Windows Server OS into using
    // UTF-8 as the default character set instead of windows-1252 which causes issues.
    // this setting only applies when running via gradle bootRun -- see web.config for the
    // java flag that configures the deployed applications
    applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

tasks.register('sourcesJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn classes
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}


artifacts {
    archives sourcesJar
    //archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            //artifact javadocJar
            groupId project.group
            artifactId 'rd-commons-lib'
            version project.version
        }
    }
    repositories {
        maven {
            name = "AzureArtifacts"
            url = uri("https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1")
            credentials {
                username = System.getenv("AZURE_DEVOPS_ARTIFACT_USERNAME")
                password = System.getenv("AZURE_DEVOPS_ARTIFACT_TOKEN")
            }
        }
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

sourceSets {

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

check.dependsOn jacocoTestCoverageVerification

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'
    }
}

dependencies {

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    implementation group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.8'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.4'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.2'
    implementation group: 'com.github.mifmif', name: 'generex', version: '1.0.2'
    implementation group: 'com.google.guava', name: 'guava', version: '33.3.1-jre'
    implementation group: 'com.google.inject', name: 'guice', version: '7.0.0'
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk
    implementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.18.0'
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '13.5'
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0'
    implementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    implementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    implementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.27.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.4.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.26.3'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    implementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
    implementation group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.1.5'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.1.4'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.14.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '5.2.0'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    testImplementation 'com.github.hmcts:fortify-client:1.4.9:all'

    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
gradle.startParameter.continueOnFailure = true


bootJar {
    enabled = false
    archiveClassifier = 'boot'
}

jar {
    enabled = true
    archiveClassifier = ''
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

distTar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

distZip {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
