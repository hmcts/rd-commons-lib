buildscript {
    ext {
        springBootVersion = '2.3.4.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.34")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'maven-publish'
    id 'uk.gov.hmcts.java' version '0.12.2'
}

apply plugin: 'java'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'org.springframework.boot'

def versions = [
        lombok             : '1.18.20',
        reformLogging      : '5.1.9',
        serenity           : '2.0.76',
        springBoot         : '2.4.12',
        springHystrix      : '2.2.8.RELEASE',
        log4j              : '2.17.1'
]

mainClassName = 'uk.gov.hmcts.reform.*'
def jarName = 'rd-commons-lib.jar'
def gitRepo = "https://github.com/hmcts/rd-commons-lib"

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/rd-commons-lib"
    }
}

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

group = 'uk.gov.hmcts.reform'
version = buildNumber



task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}


artifacts {
    archives sourcesJar
    //archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            //artifact javadocJar
            groupId project.group
            artifactId 'rd-commons-lib'
            version project.version
        }
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

sourceSets {
}

idea {
    module {
    }
}

configurations {

}
check.dependsOn jacocoTestCoverageVerification

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }

}

dependencies {
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.5.6'
    implementation (group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.2') {
        force = true
    }
    implementation (group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.1') {
        force = true
    }


    implementation group: 'com.google.guava', name: 'guava', version: '28.2-jre'
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'


    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation("org.hamcrest:hamcrest-junit:2.0.0.0") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }
    testImplementation "com.github.tomakehurst:wiremock:2.19.0"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.1.0'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.4'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot


    testImplementation(group: 'org.yaml', name: 'snakeyaml', version: '1.23') {
        force = true
    }


    //Required dependancies
    compileOnly group: 'net.serenity-bdd', name: 'serenity-core', version: '3.0.2'
    compileOnly group: 'net.serenity-bdd', name: 'serenity-spring', version: '3.0.2'
    compileOnly group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity

    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    implementation group: 'org.junit.platform', name: 'junit-platform-commons', version: versions.junitPlatform
    implementation group: 'org.junit.platform', name: 'junit-platform-engine', version: versions.junitPlatform


    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j
    implementation "com.github.hmcts.java-logging:logging:${versions.reformLogging}"
    implementation "com.github.hmcts.java-logging:logging-appinsights:${versions.reformLogging}"
    implementation ('com.github.hmcts:properties-volume-spring-boot-starter:0.1.0') {
        exclude group: 'org.glassfish', module: 'jakarta.el'
    }
    implementation 'com.github.hmcts:idam-java-client:2.0.1'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.2'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: versions.springHystrix// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.0.1'



    implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
    implementation group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'

}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
gradle.startParameter.continueOnFailure = true


bootJar {
    enabled = false
}

jar {
    enabled = true
}


// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

test {
    useJUnitPlatform()
}
